{"version":3,"sources":["webpack:///./src/components/Footer.js","webpack:///./src/components/Header.js","webpack:///./src/components/Layout.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/pages/blog.js"],"names":["Footer","className","Header","data","href","rel","integrity","crossorigin","site","siteMetadata","title","Layout","props","children","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","Blog","posts","allMarkdownRemark","edges","map","to","node","fields","slug","frontmatter","date","sinopsis"],"mappings":"sHAWeA,G,UARA,WACb,OACE,yBAAKC,UAAU,UACb,uD,YCiDSC,G,oBAnDA,WACb,IAAMC,EAAI,OAUV,OACE,6BACE,0BACEC,KAAK,+EACLC,IAAI,eAEN,0BACEA,IAAI,aACJD,KAAK,0DACLE,UAAU,0EACVC,YAAY,cAGd,yBAAKN,UAAU,eACb,yBAAKA,UAAU,OACb,4BAAKE,EAAKK,KAAKC,aAAaC,OAC5B,0BAAMT,UAAU,QAAhB,qBACA,0BAAMA,UAAU,OAAhB,KACA,0BAAMA,UAAU,QAAhB,iBACA,0BAAMA,UAAU,OAAhB,KACA,0BAAMA,UAAU,QAAhB,YAEF,yBAAKA,UAAU,SACb,uBAAGG,KAAK,gCACN,uBAAGH,UAAU,mBAEf,uBAAGG,KAAK,iCACN,uBAAGH,UAAU,oBAEf,uBAAGG,KAAK,0CACN,uBAAGH,UAAU,sBAIjB,iCC/BOU,IAbA,SAACC,GAEZ,OACQ,6BACI,kBAAC,EAAD,MACA,yBAAKX,UAAU,gBACbW,EAAMC,UAER,kBAAC,EAAD,S,kCCbhB,sGAcyBC,QAAOC,QAELC,IAAMC,cAAc,K,moBChB/C,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,wFCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGET,IAAMU,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV,O,sGC0CIC,UA5CF,WACT,IAmBMC,EAnBU,OAmBSC,kBAAkBC,MAAMC,KAAI,SAACH,GAElD,OAAS,4BACD,kBAAC,IAAD,CAAM7B,UAAU,UAAUiC,GAAE,SAAWJ,EAAMK,KAAKC,OAAOC,MACzD,wBAAIpC,UAAU,UAAU6B,EAAMK,KAAKG,YAAY5B,OAC/C,2BAAIoB,EAAMK,KAAKG,YAAYC,OAE3B,2BAAIT,EAAMK,KAAKG,YAAYE,cAQ3C,OACI,kBAAC,IAAD,KAEI,wBAAIvC,UAAU,UAAd,QACI6B","file":"component---src-pages-blog-js-3bce5ef09688ce91ca0e.js","sourcesContent":["import React from \"react\"\nimport \"./footer.styles.scss\"\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <p>Chan-Ho Suh © - 2019 </p>\n    </div>\n  )\n}\n\nexport default Footer\n","import React from \"react\"\nimport \"./header.styles.scss\"\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\n\nconst Header = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <div>\n      <link\n        href=\"https://fonts.googleapis.com/css?family=Anonymous+Pro|Open+Sans&display=swap\"\n        rel=\"stylesheet\"\n      />\n      <link\n        rel=\"stylesheet\"\n        href=\"https://use.fontawesome.com/releases/v5.7.2/css/all.css\"\n        integrity=\"sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr\"\n        crossorigin=\"anonymous\"\n      />\n\n      <div className=\"header-main\">\n        <div className=\"dev\">\n          <h1>{data.site.siteMetadata.title}</h1>\n          <span className=\"attr\">Software Engineer</span>\n          <span className=\"dot\">•</span>\n          <span className=\"attr\">Mathematician</span>\n          <span className=\"dot\">•</span>\n          <span className=\"attr\">Flaneur</span>\n        </div>\n        <div className=\"icons\">\n          <a href=\"https://github.com/chanhosuh\">\n            <i className=\"fab fa-github\"></i>\n          </a>\n          <a href=\"https://twitter.com/chanhosuh\">\n            <i className=\"fab fa-twitter\"></i>\n          </a>\n          <a href=\"https://www.linkedin.com/in/chanhosuh/\">\n            <i className=\"fab fa-linkedin\"></i>\n          </a>\n        </div>\n\n        <hr />\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react';\nimport Footer from './Footer';\nimport Header from './Header';\n\n\nconst Layout = (props) => {\n\n    return( \n            <div>\n                <Header/>\n                <div className=\"content-main\">\n                 {props.children}\n                </div>\n                <Footer/>\n            </div>\n    )\n}\n\nexport default Layout","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport Layout from '../components/Layout';\nimport {Link, graphql, useStaticQuery} from 'gatsby'\n\n\nconst Blog = () => {\n    const postsQuery = useStaticQuery(graphql`\n    query {\n        allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date]}) {\n          edges{\n            node {\n              frontmatter {\n                title\n                date\n                sinopsis\n              }\n              fields {\n                  slug\n              }\n            }\n          }\n        }\n      }\n    `)\n    \n    const posts = postsQuery.allMarkdownRemark.edges.map((posts) => {\n\n        return ( <ul>\n                <Link className='nodecor' to={`/blog/${posts.node.fields.slug}`}  >\n                <h1 className=\"opener\">{posts.node.frontmatter.title}</h1> \n                <p>{posts.node.frontmatter.date}</p>\n                </Link>\n                <p>{posts.node.frontmatter.sinopsis}</p>\n                </ul>\n        )\n        \n    })\n\n    \n    \nreturn (\n    <Layout>\n    \n        <h1 className=\"opener\">blog</h1>\n           {posts}\n    </Layout>\n)\n};\n\nexport default Blog;\n"],"sourceRoot":""}